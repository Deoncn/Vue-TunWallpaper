{"version":3,"file":"js/286.6ef27cd4.js","mappings":"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","sources":["webpack://app/./src/views/admin/IndexedDB.vue","webpack://app/src/views/admin/IndexedDB.vue","webpack://app/./src/views/admin/IndexedDB.vue?094e","webpack://app/./src/views/admin/IndexedDB.vue?481c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"align\":\"center\"}},[_c('h1',[_vm._v(\" 收藏 ❤ 本地持久化 \")])])],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.getObject()}}},[_vm._v(\"查 所有数据\")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.addObject()}}},[_vm._v(\"添加\")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"1\"}},[_c('v-text-field',{attrs:{\"dense\":\"\",\"outlined\":\"\"},model:{value:(_vm.deleteId),callback:function ($$v) {_vm.deleteId=$$v},expression:\"deleteId\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.deletObject(_vm.deleteId)}}},[_vm._v(\"删除\")])],1)],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"align\":\"center\"}},[_c('h1',[_vm._v(\" 设置 本地持久化 \")])])],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.getdefaultObject()}}},[_vm._v(\"查 所有数据\")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.heloo()}}},[_vm._v(\"添加\")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.heloo()}}},[_vm._v(\"删除\")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.defaultstate()}}},[_vm._v(\" 创建 数据仓库 \")])],1)],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"align\":\"center\"}},[_c('h1',[_vm._v(\" 数据库初始化相关 \")])])],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.openindexedDB()}}},[_vm._v(\" 数据库 初始化 \")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.openObjectstore()}}},[_vm._v(\" 创建 数据仓库 \")])],1),_c('v-btn',{attrs:{\"outlined\":\"\"},on:{\"click\":function($event){return _vm.testapi()}}},[_vm._v(\" 判断存在于否 \")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-container>\r\n\r\n\r\n        <v-row>\r\n            <v-col cols=\"12\" sm=\"6\" align=\"center\">\r\n                <h1> 收藏 ❤ 本地持久化 </h1>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <v-row>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"getObject()\">查 所有数据</v-btn>\r\n            </v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"addObject()\">添加</v-btn>\r\n            </v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"1\"> <v-text-field dense outlined v-model=\"deleteId\"> </v-text-field></v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"deletObject(deleteId)\">删除</v-btn>\r\n            </v-col>\r\n        </v-row>\r\n\r\n\r\n        <v-row>\r\n            <v-col cols=\"12\" sm=\"6\" align=\"center\">\r\n                <h1> 设置 本地持久化 </h1>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <v-row>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"getdefaultObject()\">查 所有数据</v-btn>\r\n            </v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"heloo()\">添加</v-btn>\r\n            </v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"heloo()\">删除</v-btn>\r\n            </v-col>\r\n\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"defaultstate()\"> 创建 数据仓库 </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n\r\n\r\n        <v-row>\r\n            <v-col cols=\"12\" sm=\"6\" align=\"center\">\r\n                <h1> 数据库初始化相关 </h1>\r\n            </v-col>\r\n        </v-row>\r\n        <v-row>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"openindexedDB()\"> 数据库 初始化 </v-btn>\r\n            </v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"2\">\r\n                <v-btn outlined @click=\"openObjectstore()\"> 创建 数据仓库 </v-btn>\r\n            </v-col>\r\n\r\n            <v-btn outlined @click=\"testapi()\"> 判断存在于否 </v-btn>\r\n\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex'\r\n\r\n\r\nexport default {\r\n    data: () => ({\r\n        deleteId: 0,\r\n    }),\r\n    // 链接vuex\r\n    computed: mapState({ Defaultstate: 'Defaultstate' }),\r\n\r\n    methods: {\r\n\r\n        ...mapMutations(\"favorites\", {\r\n\r\n            GreateIt: \"BUILD_IDB_FV\",\r\n\r\n\r\n        }),\r\n\r\n\r\n        // 创建数据存储空间\r\n        openindexedDB() {\r\n\r\n            const dbName = \"ttbz_test\";\r\n            var request = indexedDB.open(dbName, 30);\r\n\r\n            request.onerror = (event) => {\r\n                // 错误处理\r\n                console.log(\"错误控制台输出\", event)\r\n                console.error(`Database error: ${event.target.errorCode}`);\r\n            };\r\n\r\n            request.onupgradeneeded = (event) => {\r\n                var db = event.target.result;\r\n                this.db = db;\r\n\r\n\r\n            };\r\n\r\n            console.log(this.db);\r\n\r\n        },\r\n\r\n        testapi() {\r\n            const dbName = \"ttbz_wallpaper\";\r\n            const request = indexedDB.open(dbName);\r\n\r\n            request.onerror = (event) => {\r\n                // 错误处理\r\n                console.log(\"错误控制台输出\", event)\r\n                console.error(`Database error: ${event.target.errorCode}`);\r\n            };\r\n\r\n            request.onupgradeneeded = (event) => {\r\n                const db = event.target.result;\r\n                this.db = db;\r\n                const objectStore = db.createObjectStore(\"favorites\", { keyPath: \"id\" });\r\n                console.log(\"HELLO\", objectStore);\r\n            }\r\n\r\n            request.onsuccess = (event) => {\r\n                const db = event.target.result;\r\n                console.log(db)\r\n                \r\n                const objectStore = db.transaction(\"favorites\").objectStore(\"favorites\");\r\n\r\n            }\r\n\r\n        },\r\n\r\n        // 建 (❤ ω ❤) 库\r\n        openObjectstore() {\r\n\r\n            const customerData = [\r\n                {\r\n                    \"id\": 135,\r\n                    \"res\": \"3840 x 2160\",\r\n                    \"type\": \"风景\",\r\n                    \"description\": \"壁纸; 风景\",\r\n                    \"src\": \"https://deoncnone.oss-cn-chengdu.aliyuncs.com/2022-11-10/0fd60bb7aac04e638098c87c4fb627e2.png\",\r\n                    \"time\": null,\r\n                    \"isfmo\": false\r\n                },\r\n                {\r\n                    \"id\": 139,\r\n                    \"res\": \"3840 x 2160\",\r\n                    \"type\": \"风景\",\r\n                    \"description\": \"壁纸; 风景\",\r\n                    \"src\": \"https://deoncnone.oss-cn-chengdu.aliyuncs.com/2022-11-10/0fd60bb7aac04e638098c87c4fb627e2.png\",\r\n                    \"time\": null,\r\n                    \"isfmo\": false\r\n                },\r\n            ];\r\n\r\n            const dbName = \"ttbz_wallpaper\";\r\n            const request = indexedDB.open(dbName);\r\n\r\n            request.onerror = (event) => {\r\n                // 错误处理\r\n                console.log(\"错误控制台输出\", event)\r\n                console.error(`Database error: ${event.target.errorCode}`);\r\n            };\r\n\r\n            request.onupgradeneeded = (event) => {\r\n                const db = event.target.result;\r\n                this.db = db;\r\n\r\n                const objectStore = db.createObjectStore(\"favorites\", { keyPath: \"id\" });\r\n\r\n                objectStore.createIndex(\"id\", \"id\", { unique: true });\r\n\r\n                objectStore.transaction.oncomplete = (event) => {\r\n                    console.log(event);\r\n                    const customerObjectStore = db.transaction(\"favorites\", \"readwrite\").objectStore(\"favorites\");\r\n                    // customerData.forEach((customer) => {\r\n                    //     customerObjectStore.add(customer);\r\n                    // });\r\n                };\r\n\r\n\r\n                console.log(this.db);\r\n            };\r\n\r\n        },\r\n\r\n        // 建 DefaultStat 库\r\n        defaultstate() {\r\n\r\n            const customerData = [{\r\n                \"fullscreen\": false,\r\n                \"detail\": false,\r\n                \"animation\": false,\r\n                \"hdmode\": false,\r\n                \"compact\": false,\r\n                \"size\": \"24\"\r\n            }];\r\n\r\n            const dbName = \"ttbz_wallpaper\";\r\n            const request = indexedDB.open(dbName, 2);\r\n\r\n            request.onerror = (e) => {\r\n                console.log(e.target.result);\r\n            }\r\n\r\n            request.onsuccess = (event) => {\r\n                const db = event.target.result;\r\n                this.db = db;\r\n\r\n                console.log(this.db);\r\n            };\r\n\r\n            request.onupgradeneeded = (e) => {\r\n                const db = e.target.result;\r\n\r\n                const objectStore = db.createObjectStore(\"settings\");\r\n\r\n                objectStore.transaction.oncomplete = (event) => {\r\n                    console.log(event);\r\n                    const customerObjectStore = db.transaction(\"settings\", \"readwrite\").objectStore(\"settings\");\r\n\r\n                    customerObjectStore.add(customerData, 101).onsuccess = (event) => {\r\n                        console.log(event);\r\n                    }\r\n\r\n                };\r\n\r\n            };\r\n\r\n\r\n\r\n        },\r\n\r\n\r\n        // 连接仓库\r\n        connectStore() {\r\n\r\n            const dbName = \"ttbz_wallpaper\";\r\n            const request = indexedDB.open(dbName);\r\n\r\n            request.onerror = (event) => { console.log(\"发生错误！\", event) };\r\n\r\n            request.onsuccess = (event) => {\r\n                const db = event.target.result;\r\n                this.db = db;\r\n\r\n                console.log(this.db);\r\n            };\r\n\r\n        },\r\n\r\n\r\n        // 增加数据\r\n        addObject() {\r\n            const customerData = [{\r\n                \"id\": 135,\r\n                \"res\": \"3840 x 2160\",\r\n                \"type\": \"风景\",\r\n                \"description\": \"壁纸; 风景\",\r\n                \"src\": \"https://deoncnone.oss-cn-chengdu.aliyuncs.com/2022-11-10/0fd60bb7aac04e638098c87c4fb627e2.png\",\r\n                \"time\": null,\r\n                \"isfmo\": false\r\n            }, {\r\n                \"id\": 135,\r\n                \"res\": \"3840 x 2160\",\r\n                \"type\": \"风景\",\r\n                \"description\": \"壁纸; 风景\",\r\n                \"src\": \"https://deoncnone.oss-cn-chengdu.aliyuncs.com/2022-11-10/0fd60bb7aac04e638098c87c4fb627e2.png\",\r\n                \"time\": null,\r\n                \"isfmo\": false\r\n            }]\r\n\r\n\r\n            const db = this.db;\r\n            const transaction = db.transaction([\"favorites\"], \"readwrite\");\r\n            // Do something when all the data is added to the database.\r\n\r\n            transaction.oncomplete = (event) => {\r\n                console.log(\"All done!\", event);\r\n            };\r\n\r\n            transaction.onerror = (event) => {\r\n                // Don't forget to handle errors!\r\n                console.log(\"error!\", event);\r\n            };\r\n\r\n            const objectStore = transaction.objectStore(\"favorites\");\r\n            customerData.forEach((customer) => {\r\n                const request = objectStore.add(customer);\r\n                request.onsuccess = (event) => {\r\n                    console.log(event);\r\n                    // event.target.result === customer.ssn;\r\n                };\r\n            });\r\n\r\n\r\n        },\r\n\r\n        // 删除数据\r\n        deletObject(deleteId) {\r\n            console.log(deleteId);\r\n            const rpg = Number(deleteId);\r\n\r\n            const db = this.db;\r\n            const request = db.transaction([\"favorites\"], \"readwrite\").objectStore(\"favorites\").delete(rpg);\r\n\r\n            request.onerror = (event) => {\r\n                // 错误处理\r\n                console.log(\"错误控制台输出\", event)\r\n                console.error(`Database error: ${event.target.errorCode}`);\r\n            };\r\n\r\n            request.onsuccess = (event) => {\r\n                console.log(\"It's gone!\", event)\r\n            };\r\n\r\n        },\r\n\r\n        //查询数据\r\n        getObject() {\r\n            const db = this.db;\r\n            const objectStore = db.transaction(\"favorites\").objectStore(\"favorites\");\r\n\r\n            objectStore.openCursor().onsuccess = (event) => {\r\n                const cursor = event.target.result;\r\n                if (cursor) {\r\n                    console.log(`Name for id ${cursor.key} is ${cursor.value.f}`);\r\n                    cursor.continue();\r\n                } else {\r\n                    console.log(\"No more entries!\");\r\n                }\r\n            };\r\n\r\n        },\r\n\r\n        getdefaultObject() {\r\n            const db = this.db;\r\n            const objectStore = db.transaction(\"settings\").objectStore(\"settings\");\r\n\r\n            objectStore.openCursor().onsuccess = (event) => {\r\n                const cursor = event.target.result;\r\n                if (cursor) {\r\n                    console.log(`Name for id ${cursor.key} is ${cursor.value}`);\r\n                    console.log(cursor.value)\r\n                    cursor.continue();\r\n                } else {\r\n                    console.log(\"No more entries!\");\r\n                }\r\n            };\r\n\r\n        },\r\n\r\n\r\n    },\r\n\r\n    created() {\r\n        console.clear();\r\n        // this.connectStore();\r\n\r\n    },\r\n\r\n\r\n\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./IndexedDB.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./IndexedDB.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./IndexedDB.vue?vue&type=template&id=c02d8bac&\"\nimport script from \"./IndexedDB.vue?vue&type=script&lang=js&\"\nexport * from \"./IndexedDB.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["attrs","_vm","value","deleteId","callback","_c","staticRenderFns","data","computed","Defaultstate","methods","GreateIt","openindexedDB","request","console","testapi","keyPath","openObjectstore","objectStore","unique","defaultstate","customerObjectStore","connectStore","addObject","transaction","customerData","deletObject","getObject","cursor","getdefaultObject","created","component","render"],"sourceRoot":""}